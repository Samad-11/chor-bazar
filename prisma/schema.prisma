generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  brand       String
  inStock     Boolean
  colors      Color[]
  reviews     Review[]
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id])
}

type Color {
  color     String
  colorCode String
  images    String[]
}

model Review {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String   @db.ObjectId
  productId   String   @db.ObjectId
  rating      Float
  comment     String
  createdDate DateTime
  user        User     @relation(fields: [userId], references: [id])
  product     Product  @relation(fields: [productId], references: [id])
}

model User {
  id             String    @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  email          String    @unique
  emailVerified  DateTime?
  image          String
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  role           String
  reviews        Review[]
  orders         Order[]
}

model Category {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String    @unique
  products Product[]
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  userId     String      @db.ObjectId
  total      Float
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
}

model OrderItem {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  orderId      String @db.ObjectId
  productId    String @db.ObjectId
  quantity     Int
  productColor String
  price        Float
  order        Order  @relation(fields: [orderId], references: [id])
}
